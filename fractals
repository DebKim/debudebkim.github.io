// Start with an axiom.
var current = "A";
// Let’s keep track of how many generations.
var count = 0;

function setup() {
  println("Generation " + count + ": " + current);
}

function draw() {
}

function mousePressed() {
  var next = "";
  // Traverse the current String and make the new one.
  for (int i = 0; i < current.length(); i++) {
    var c = current.charAt(i);
    if (c == 'A') {
      next += "AB";
    }  else if (c == 'B') {
      next += "A";
    }
  }
  current = next;
  count++;
  println("Generation " + count + ": " + current);
}
var s = "blah";
s += "add some more stuff";
  // A StringBuffer for the “next” sentence
  StringBuffer next = new StringBuffer();
  for (int i = 0; i < current.length(); i++) {
    var c = current.charAt(i);
    if (c == 'A') {
      // append() instead of +=
      next.append("AB");
    } else if (c == 'B') {
      next.append("A");
    }
  }
  // StringBuffer can easily be converted
  // back to a String.
  current = next.toString();
  for (int i = 0; i < sentence.length(); i++) {

  // Looking at each character one at a time
  char c = sentence.charAt(i);

  //[full] Performing the correct task for each character.
  // This could also be written with a “case” statement,
  // which might be nicer to look at, but leaving it as an
  // if/else if structure helps readers not familiar with case statements.
  if (c == 'F') {
    line(0,0,len,0);
    translate(len,0);
  } else if (c == 'F') {
   translate(len,0);
  } else if (c == '+') {
    rotate(theta);
  } else if (c == '-') {
    rotate(-theta);
  } else if (c == '[') {
    pushMatrix();
  } else if (c == ']') {
    popMatrix();
  }
  //[end]
}
